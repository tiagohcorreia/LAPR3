@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

autonumber

'hide footbox
actor "Real Estate Agent" as Agent
participant ":CreateAnnouncementUI" as UI
participant ":CreateAnnoucementController" as Controller
participant ":AppSession" as AppSession
participant "appSession\n:AppSession" as appSession
participant "currentSession\n:UserSession" as currentSession
participant ":Repositories" as Repositories
participant "repositories:\nRepositories" as repositoriesInstance

activate Agent

    Agent -> UI : asks to create new announcement

    activate UI
    UI->Controller**:creates
    UI--> Agent : lists and asks to select type of business and type of property
    deactivate UI

        Agent -> UI : selects data



activate UI
    UI->Controller:getStatesList()

activate Controller
    ref over Controller

    get states list

    end

Controller-->UI:statesList

deactivate Controller

UI-->Agent: shows states lists and asks to select property state
    deactivate UI

    Agent -> UI : selects property state

    activate UI
            UI->Controller:getDistrictsList(state)

            activate Controller

    ref over Controller

    get list of districts within the selected state

end

            Controller-->UI:districtsList

            deactivate Controller

            UI--> Agent : shows districts list and asks to select property district
                    deactivate UI

                Agent -> UI : selects property district

                activate UI
                UI->Controller:getCitiesList(district)

                activate Controller

    ref over Controller

    get list cities within the selected district

    end


                Controller-->UI:citiesList

                deactivate Controller

UI--> Agent : shows cities list and asks to select property city
    deactivate UI

    Agent -> UI : selects property city

     activate UI
            UI--> Agent : asks to enter: zipcode, street adress, area and distance from city center
            deactivate UI

             Agent -> UI : enters data
         alt property type = apartment/house

    activate UI
    UI-->Agent:asks to enter number of bedrooms, bathrooms and parking spaces
    deactivate UI

    Agent->UI:enters data

    activate UI
    UI-->Agent: asks to select existence of air conditianing and/or central heating
    deactivate UI

    Agent->UI:selects data
    alt property type = house

    activate UI
    UI-->Agent:asks to select the existence of basement and/or inhabitable loft, and type of sun exposure
    deactivate UI

    Agent->UI:selects data
    activate UI
    end
end
     UI--> Agent : asks to select type of comission
     deactivate UI

         Agent -> UI : selects data

         activate UI
         UI-->Agent:asks to enter price and comission
         deactivate UI

         Agent->UI:enters data

         activate UI
         UI--> Agent : displays summmary and asks to confim
         deactivate UI

         Agent -> UI : confirms submission

         activate UI

         alt propertyType=land

         UI->Controller:createAdvertisement(businessType,price,comissionType,\ncomission,state,district,city,zipcode,street,area,distanceFromCenter)
                  activate Controller

         else propertyType=apartment
         UI->Controller:createAdvertisement(businessType,price,comissionType,comission,state,district,city,zipcode,street,\narea,distanceFromCenter,nBedrooms,nBathrooms,nParkingSpaces,heating,airConditianing)

         else propertyType=house
                  UI->Controller:createAdvertisement(businessType,price,comissionType,comission,state,district,city,zipcode,street,area,\ndistanceFromCenter,nBedrooms,nBathrooms,nParkingSpaces,heating,airConditianing,basement,loft,sun)

         end

Controller->AppSession:getInstance()

activate AppSession
AppSession-->Controller:appSession
deactivate AppSession

Controller->appSession:getCurrentSession()

activate appSession
appSession-->Controller:currentSession
deactivate appSession

Controller->currentSession:getEmployeeEmail()

activate currentSession
currentSession-->Controller:employeeEmail
deactivate currentSession

Controller->Repositories:getInstance()

    activate Repositories
    Repositories-->Controller:repositories
    deactivate Repositories

    Controller->repositoriesInstance:getAdvertisementsRepository()

    activate repositoriesInstance
    repositoriesInstance-->Controller:advertisementsRepository
    deactivate repositoriesInstance

alt businessType=sale

ref over Controller

create sale

end

else businessType=lease

         ref over Controller

         create lease

         end

         end

         ref over Controller
         validate advertisement
         end

        Controller-->UI:success

        deactivate Controller

         UI--> Agent : displays operation success
         deactivate UI


@enduml