@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

autonumber

'hide footbox
actor "Real Estate Agent" as Agent
participant ":CreateAnnouncementUI" as UI
participant ":CreateAnnoucementController" as Controller
participant ":Repositories" as Repositories
participant "repositories:\nRepositories" as repositoriesInstance
participant "statesRepository\n:StatesRepository" as statesRepository
participant "state\n:State" as state
participant "districtsCollection\n:DistrictsCollection" as districts
participant "district\n:District" as district
participant "citiesCollection\n:CitiesCollection" as cities
participant ":AppSession" as AppSession
participant ":appSession\n:AppSession" as appSession
participant "currentSession\n:UserSession" as currentSession
participant "advertisementsRepository\n:AdvertisementsRepository" as advertisementsRepository
participant "leasesRepository\n:LeasesRepository" as leases
participant "lease\n:Lease" as lease
participant "salesRepository\n:SalesRepository" as sales
participant "sale\n:Sale" as sale
participant "land\n:Land" as land
participant "apartment\n:Apartment" as apartment
participant "house\n:House" as house

activate Agent

    Agent -> UI : asks to create new announcement

    activate UI
    UI->Controller**:creates
    UI--> Agent : asks to select type of business and type of property
    deactivate UI

        Agent -> UI : selects data



activate UI
    UI->Controller:getStatesList()

activate Controller
    Controller->Repositories:getInstance()

    activate Repositories
    Repositories-->Controller:repositories
    deactivate Repositories

    Controller->repositoriesInstance:getStatesRepository()

    activate repositoriesInstance
    repositoriesInstance-->Controller:statesRepository
    deactivate repositoriesInstance

    Controller->statesRepository:getStatesList()

    activate statesRepository
    statesRepository-->Controller:statesList
    deactivate statesRepository

Controller-->UI:statesList

deactivate Controller

UI-->Agent: shows states lists and asks to select property state
    deactivate UI

    Agent -> UI : selects property state

    activate UI
            UI->Controller:getDistrictsList(state)

            activate Controller

    Controller->state:getDistrictsCollection()

    activate state
    state-->Controller:districtsCollection
    deactivate state

    Controller->districts:getDistrictsList()

    activate districts
    districts-->Controller:districtsList
    deactivate districts

            Controller-->UI:districtsList

            deactivate Controller

            UI--> Agent : shows districts list and asks to select property district
                    deactivate UI

                Agent -> UI : selects property district

                activate UI
                UI->Controller:getCitiesList(district)

                activate Controller

    Controller->district:getCitiesCollection()

    activate district
    district-->Controller:citiesCollection
    deactivate district

    Controller->cities:getCitiesList()

    activate cities
    cities-->Controller:citiesList
    deactivate cities

                Controller-->UI:citiesList

                deactivate Controller

UI--> Agent : shows cities list and asks to select property city
    deactivate UI

    Agent -> UI : selects property city

     activate UI
            UI--> Agent : asks to enter: zipcode, street adress, area and distance from city center
            deactivate UI

             Agent -> UI : enters data
         alt property type = apartment/house

    activate UI
    UI-->Agent:asks to enter number of bedrooms, bathrooms and parking spaces
    deactivate UI

    Agent->UI:enters data

    activate UI
    UI-->Agent: asks to select existence of air conditianing and/or central heating
    deactivate UI

    Agent->UI:selects data
    alt property type = house

    activate UI
    UI-->Agent:asks to select the existence of basement and/or inhabitable loft, and type of sun exposure
    deactivate UI

    Agent->UI:selects data
    activate UI
    end
end
     UI--> Agent : asks to select type of comission
     deactivate UI

         Agent -> UI : selects data

         activate UI
         UI-->Agent:asks to enter price and comission (value/percentage)
         deactivate UI

         Agent->UI:enters data

         activate UI
         UI--> Agent : displays summmary and asks to confim
         deactivate UI

         Agent -> UI : confirms submission

         activate UI

         alt propertyType=land

         UI->Controller:createAdvertisement(businessType,price,comissionType,\ncomission,state,district,city,zipcode,street,area,distanceFromCenter)
                  activate Controller

         else propertyType=apartment
         UI->Controller:createAdvertisement(businessType,price,comissionType,comission,state,district,city,zipcode,street,\narea,distanceFromCenter,nBedrooms,nBathrooms,nParkingSpaces,heating,airConditianing)

         else propertyType=house
                  UI->Controller:createAdvertisement(businessType,price,comissionType,comission,state,district,city,zipcode,street,area,\ndistanceFromCenter,nBedrooms,nBathrooms,nParkingSpaces,heating,airConditianing,basement,loft,sun)

         end

 Controller->AppSession:getInstance()

 activate AppSession
 AppSession-->Controller:appSession
 deactivate AppSession

 Controller->appSession:getCurrentSession()

 activate appSession
 appSession-->Controller:currentSession
 deactivate appSession

 Controller->currentSession:getUserEmail()

 activate currentSession
 currentSession-->Controller:userEmail
 deactivate currentSession

 Controller->Repositories:getInstance()

     activate Repositories
     Repositories-->Controller:repositories
     deactivate Repositories

     Controller->repositoriesInstance:getAdvertisementsRepository()

     activate repositoriesInstance
     repositoriesInstance-->Controller:advertisementsRepository
     deactivate repositoriesInstance

     alt businessType=sale

     Controller->advertisementsRepository:getSalesRepository()

         activate advertisementsRepository
         advertisementsRepository-->Controller:salesRepository
         deactivate advertisementsRepository

     alt propertyType=land

         Controller->sales:createSale(responsibleAgent,price,comissionType,comission,\nstate,district,city,zipcode,street,area,distanceFromCenter)

         activate sales
         sales->sale**

     activate sale
     sale->land**:creates

     activate land
     land->adress**:creates
     land-->sale
     deactivate land

     sale-->sales
     deactivate sale

         sales-->Controller:sale
         deactivate sales

     else propertyType=apartment

         Controller->sales:createSale(responsibleAgent,price,comissionType,comission,state,district,city,zipcode,street,\narea,distanceFromCenter,nBedrooms,nBathrooms,nParkingSpaces,heating,airConditianing)

         activate sales
         sales->sale**

         activate sale
     sale->apartment**:creates

     activate apartment
     apartment->adress**
     apartment-->sale
     deactivate apartment

     sale-->sales
     deactivate sale

     sales-->Controller:sale
     deactivate sales

     else propertyType=house

         Controller->sales:createSale(createSale(responsibleAgent,price,comissionType,comission,state,district,city,zipcode,street,area,\ndistanceFromCenter,nBedrooms,nBathrooms,nParkingSpaces,heating,airConditianing,basement,loft,sun)

     activate sales
     sales->sale**:creates

         activate sale
         sale->house**:creates

         activate house
         house->adress**:creates
         house-->sale
         deactivate house

         sale-->sales
         deactivate sale

         sales-->Controller:sale
         deactivate sales

     end

     else businessType=lease

    Controller->advertisementsRepository:getLeasesRepository()

        activate advertisementsRepository
        advertisementsRepository-->Controller:leasesRepository
        deactivate advertisementsRepository

       alt propertyType=land

           Controller->leases:createLeases(responsibleAgent,price,comissionType,comission,\nstate,district,city,zipcode,street,area,distanceFromCenter)

           activate leases
           leases->lease**

       activate lease
       lease->land**:creates

       activate land
       land->adress**:creates
       land-->lease
       deactivate land

       lease-->leases
       deactivate lease

           leases-->Controller:lease
           deactivate leases

       else propertyType=apartment

           Controller->leases:createLeases(responsibleAgent,price,comissionType,comission,state,district,city,zipcode,street,\narea,distanceFromCenter,nBedrooms,nBathrooms,nParkingSpaces,heating,airConditianing)

           activate leases
           leases->lease**

           activate lease
       lease->apartment**:creates

       activate apartment
       apartment->adress**
       apartment-->lease
       deactivate apartment

       lease-->leases
       deactivate lease

       leases-->Controller:lease
       deactivate leases

       else propertyType=house

           Controller->leases:createLeases(createSale(responsibleAgent,price,comissionType,comission,state,district,city,zipcode,street,area,\ndistanceFromCenter,nBedrooms,nBathrooms,nParkingSpaces,heating,airConditianing,basement,loft,sun)

       activate leases
       leases->lease**:creates

           activate lease
           lease->house**:creates

           activate house
           house->adress**:creates
           house-->lease
           deactivate house

           lease-->leases
           deactivate lease

           leases-->Controller:lease
           deactivate leases

       end

     end

 Controller->Repositories:getInstance()

     activate Repositories
     Repositories-->Controller:repositories
     deactivate Repositories

     Controller->repositoriesInstance:getAdvertisementsRepository()

     activate repositoriesInstance
     repositoriesInstance-->Controller:advertisementsRepository
     deactivate repositoriesInstance

     Controller->advertisementsRepository:getLeasesRepository()

         activate advertisementsRepository
         advertisementsRepository-->Controller:leasesRepository
         deactivate advertisementsRepository

 Controller->leases:validateProperty(property)

 activate leases

 loop for each lease
 leases->lease:isThereProperty(property)

 activate lease
 lease-->leases:true/false
 deactivate lease

 end

 leases-->Controller:true/false
 deactivate leases

 Controller->Repositories:getInstance()

     activate Repositories
     Repositories-->Controller:repositories
     deactivate Repositories

     Controller->repositoriesInstance:getAdvertisementsRepository()

     activate repositoriesInstance
     repositoriesInstance-->Controller:advertisementsRepository
     deactivate repositoriesInstance


 Controller->advertisementsRepository:getSalesRepository()

     activate advertisementsRepository
     advertisementsRepository-->Controller:salesRepository
     deactivate advertisementsRepository

 Controller->sales:validateProperty(property)

 activate sales

 loop for each sale
 sales->sale:isThereProperty(property)

 activate sale
 sale-->sales:true/false
 deactivate sale

 end

 sales-->Controller:true/false
 deactivate sales


        Controller-->UI:success

        deactivate Controller

         UI--> Agent : displays operation success
         deactivate UI


@enduml